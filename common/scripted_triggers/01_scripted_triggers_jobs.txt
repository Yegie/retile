
## This looks pretty solid...
ruler_job_check_trigger = {
	custom_tooltip = RULER_JOB_TRIGGER
	hidden_trigger = {
		exists = owner								## These are all the same as the 
		OR = { 
			is_enslaved = no
			has_slavery_type = { type = slavery_domestic }
		}											## "possible_pre_triggers" block
		is_being_purged = no						## except for "has_owner = yes"
		is_being_assimilated = no					##
		NOT = { has_trait = trait_syncretic_proles }		## Syncretic pops can't be rulers
		NOT = { has_trait = trait_nerve_stapled }			## Nerve stapled pops can't be rulers
		OR = {
			NOT = { has_trait = trait_mechanical }			## Machines can't be rulers...
			AND = {
				owner = { has_technology = tech_synthetic_workers }	##...unless they're smart enough...
				owner = { has_policy_flag = ai_full_rights }		##...and have sufficient species rights
			}
		}
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } } ## Bio-trophys can't be rulers
	}
}

## used for: colonist, researcher, priest, culture_worker, dimensional_portal_researcher, dimensional_portal_researcher_gestalt
## Forbids synthetics from working these jobs if AI is outlawed		## Concerns: Why is a gestalt job evaluated here?
##																	## Otherwise... looks OK
complex_specialist_job_check_trigger = {
	specialist_job_check_trigger = yes
	hidden_trigger = {
		exists = owner
		OR = {
			NOT = { has_trait = trait_mechanical }		## Non-machines are OK
			AND = {										## Synthetics are OK if AI is NOT outlawed
				owner = { has_technology = tech_synthetic_workers }
				owner = { NOT = { has_policy_flag = ai_outlawed } }			
			}
		}
	}
}

## This is the same list of exclusions from ruler_job_check_trigger... It still looks pretty solid...
specialist_job_check_trigger = {
	custom_tooltip = SPECIALIST_JOB_TRIGGER
	hidden_trigger = {
		exists = owner				
		OR = { 
			is_enslaved = no
			has_slavery_type = { type = slavery_domestic }
		}
		is_being_purged = no
		is_being_assimilated = no
		NOT = { has_trait = trait_syncretic_proles }
		NOT = { has_trait = trait_nerve_stapled }
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }
	}
}

## This is the same as the ruler/specialist exclusions, except domestic servants are allowed. Looks OK
entertainer_job_check_trigger = {
	custom_tooltip = SPECIALIST_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		OR = {
			is_enslaved = no
			has_slavery_type = { type = slavery_domestic }
		}		
		is_being_purged = no
		is_being_assimilated = no
		NOT = { has_trait = trait_syncretic_proles }
		NOT = { has_trait = trait_nerve_stapled }
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }	
	}
}

## This is the same as the ruler/specialist exclusions, except battle slaves are allowed. Looks OK
battle_thrall_job_check_trigger = {
	custom_tooltip = SPECIALIST_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		OR = {
			is_enslaved = no
			has_slavery_type = { type = slavery_military }
			has_slavery_type = { type = slavery_domestic }
		}		
		is_being_purged = no
		is_being_assimilated = no
		NOT = { has_trait = trait_nerve_stapled }
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }	
	}
}

## Used for preacher. (vanilla also includes clerk, technician)
## Prevents basic robots from working these jobs. Droids are OK though.
## This looks OK, except I personally think it should only apply to preachers...
complex_worker_job_check_trigger = {
	worker_job_check_trigger = yes
	hidden_trigger = {	
		exists = owner
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
	}
}

## Forbids the usuals, except that only Livestock and "Matrix" slaves are prohibited from being workers.
## Also, machines always pass this one. 			Looks OK
worker_job_check_trigger = {
	custom_tooltip = WORKER_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		is_being_purged = no
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }
		NAND = {
			has_citizenship_type = { type = citizenship_slavery }
			OR = {
				has_slavery_type = { type = slavery_livestock }
				has_slavery_type = { type = slavery_matrix }
			}
		}
	}
}

## Modified to exclued non-functional bio pops under hive-minds.
drone_job_check_trigger = {
	custom_tooltip = DRONE_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		OR = {
			owner = { is_machine_empire = yes}
			AND = {
				owner = { is_hive_empire = yes}
				has_living_standard = { type = living_standard_hive_mind }
			}
		}
		is_being_purged = no
		is_enslaved = no
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }	
	}
}

has_utopian_living_standard_type = {
	has_living_standard = { type = living_standard_utopian }
}

has_very_high_living_standard_type = {
	OR = {
		has_living_standard = { type = living_standard_chemical_bliss }
		has_living_standard = { type = living_standard_utopian }
	}	
}

has_shared_burden_living_standard_type = {
	has_living_standard = { type = living_standard_shared_burden }	
}

has_academic_living_standard_type = {
	has_living_standard = { type = living_standard_academic_privilege }	
}

has_high_living_standard_type = {
	has_living_standard = { type = living_standard_good }
}

has_normal_living_standard_type = {
	has_living_standard = { type = living_standard_normal }
}

has_stratified_living_standard_type = {
	has_living_standard = { type = living_standard_stratified }
}

has_low_living_standard_type = {
	has_living_standard = { type = living_standard_subsistence }
}

is_lithoid = {
	species = {
		is_archetype = LITHOID
	}
}

is_plantoid = {
	species = {
		is_archetype = PLANTOID
	}
}

is_organic_species = {
	species = {
		OR = {
			is_archetype = BIOLOGICAL # original trigger did not include pre-sapient classes
			is_archetype = LITHOID
			is_archetype = PLANTOID
		}
	}
}
is_robotic_species = {
	species = {
		OR = {
			is_archetype = ROBOT
			is_archetype = MACHINE
		}
	}
}

can_take_servant_job = {
	OR = {
		is_domestic_robot = yes
		is_domestic_servant = yes
	}
	always = no
}

is_domestic_servant = {	
	is_enslaved = yes
	has_slavery_type = { type = slavery_domestic }	
	always = no	
}

is_domestic_robot = {
	has_citizenship_type = { type = citizenship_robot_servitude }
	has_trait = trait_robot_domestic_protocols
}

prosperity_gospel_check_trigger = {
	is_spiritualist = yes
	planet = {
		exists = owner
		OR = {
			owner = { has_valid_civic = civic_gospel_of_the_masses }
			AND = {
				has_branch_office = yes
				branch_office_owner = { has_valid_civic = civic_gospel_of_the_masses }
			}
		}	
	}
}